#!/bin/sh -Ceu

cd templates

out='../templates.go'
out_f='../template_funcs.go'
out_t='../template_types.go'

tee "$out" >/dev/null <<EOF
/*
   ! THIS SOURCE FILE IS GENERATED BY "mktemplatesgo.sh" !

   Stepdance - a client certificate management portal
   Copyright (C) 2025  SUSE LLC <georg.pfuetzenreuter@suse.com>

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package web

import "html/template"

EOF

tee -a "$out_f" >/dev/null <<EOF
func readTemplates() *Templates {
	// TODO: find root automatically instead of assuming working directory
	tmpldir := "./web/templates/"
	if st != nil {
		tmpldir = "./templates/"
	}

	tmpls := new(Templates)

EOF

tee "$out_t" >/dev/null <<EOF
type Templates struct {
EOF

for file in *.html
do
	template="$(sed -En '1s?^\{\{/\* template:(.*) \*/\}\}?\1?p' "$file")"

	if [ -z "$template" ]
	then
		if [ "$file" != 'base.html' ] && [ "$file" != 'top.html' ]
		then
			echo "Missing template header in file $file, skipping."
		fi
		continue
	fi

	printf '\ttmpls.%s = template.Must(template.ParseFiles(tmpldir+"%s", tmpldir+"top.html", tmpldir+"base.html"))\n' "$template" "$file" >> "$out_f"
	printf '\t%s\t%s\n' "$template" '*template.Template' >> "$out_t"
done

printf '\n\treturn tmpls\n' >> "$out_f"

tee -a "$out_t" "$out_f" >/dev/null <<EOF
}

EOF

cat "$out_t" "$out_f" >> "$out"

rm "$out_t" "$out_f"

go fmt "$out" >/dev/null
